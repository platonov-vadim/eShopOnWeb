name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Replace the value below with your ACR login server (e.g., youracrname.azurecr.io)
  ACR_LOGIN_SERVER: pro690finalacr.azurecr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Log in to Azure using your service principal credentials stored as GitHub secret 'AZURE_CREDENTIALS'
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry (ACR)
      - name: Login to ACR
        run: |
          # Extract the registry name by removing the domain suffix.
          REGISTRY_NAME=${ACR_LOGIN_SERVER%%.*}
          echo "Logging into ACR: $ACR_LOGIN_SERVER (Registry name: $REGISTRY_NAME)"
          az acr login --name $REGISTRY_NAME

      # Step 4: Build the Docker image using your Dockerfile
      - name: Build Docker Image
        run: |
          # The Dockerfile is assumed to be at src/Web/Dockerfile.
          # We tag the image with the ACR login server URL and use the GitHub run number for uniqueness.
          docker build -f src/Web/Dockerfile -t $ACR_LOGIN_SERVER/eshoponweb/web:${{ github.run_number }} .

      # Step 5: Push the Docker image to ACR
      - name: Push Docker Image
        run: |
          docker push $ACR_LOGIN_SERVER/eshoponweb/web:${{ github.run_number }}
